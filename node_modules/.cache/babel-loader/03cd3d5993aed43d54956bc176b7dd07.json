{"ast":null,"code":"var _jsxFileName = \"X:\\\\Front-end\\\\LGM_internship\\\\calculator\\\\src\\\\components\\\\calculator.js\";\nimport React, { Component } from 'react';\nimport './calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: '0',\n      number: '0',\n      operator: ''\n    };\n    this.handleNumberInput = this.handleNumberInput.bind(this);\n    this.handleOperatorInput = this.handleOperatorInput.bind(this);\n    this.handleEqualInput = this.handleEqualInput.bind(this);\n    this.handleCommaInput = this.handleCommaInput.bind(this);\n    this.handleNegateInput = this.handleNegateInput.bind(this);\n    this.handleClearInput = this.handleClearInput.bind(this);\n  } // function to handle input of the clear button\n\n\n  handleClearInput() {\n    this.setState({\n      result: '0',\n      number: '0',\n      operator: ''\n    });\n  } // function to handle inputs from number buttons\n\n\n  handleNumberInput(e) {\n    e.preventDefault(); // Getting the value from the pressed button\n\n    const value = e.target.innerHTML;\n    console.log(value); // appending the value from the button to the current number\n\n    this.setState(prevState => {\n      return {\n        number: prevState.number === '0' && value === '0' ? '0' : prevState.number % 1 === 0 && value !== '0' // if it's a whole number\n        ? Number(prevState.number + value) // it returns a Number() to get rid of 0's in the front when a number is typed, also includes\n        : prevState.number + value,\n        // value !== \"0\" so you can type a 0 right after the comma\n        result: prevState.operator ? prevState.result : '0' // this line resets the result if a new number was typed with no operator stored\n\n      };\n    });\n  } // function to handle operator inputs\n\n\n  handleOperatorInput(e) {\n    const operation = e.target.innerHTML;\n    this.setState(prevState => {\n      return {\n        operator: operation,\n        result: prevState.number ? prevState.number : prevState.result,\n        number: operation === '-' && prevState.number === '0' ? '-' : ''\n      };\n    });\n  } // function to handle equal input\n\n\n  handleEqualInput() {\n    let newResult = 0;\n\n    switch (this.state.operator) {\n      case '+':\n        newResult = Number(this.state.result) + Number(this.state.number);\n        break;\n\n      case '-':\n        newResult = this.state.result - this.state.number;\n        break;\n\n      case '*':\n        newResult = this.state.result * this.state.number;\n        break;\n\n      case '/':\n        newResult = this.state.result / this.state.number;\n        break;\n\n      default:\n        newResult = this.state.number ? this.state.number : this.state.result;\n    }\n\n    this.setState({\n      number: '',\n      operator: '',\n      result: Number(newResult)\n    });\n  } // function to handle comma input\n\n\n  handleCommaInput() {\n    // concats \",\" to current number if number doesn't include one already\n    if (this.state.number) this.setState({\n      number: !this.state.number.toString().includes('.') ? this.state.number + '.' : this.state.number\n    });\n  } // function to handle negation of number\n\n\n  handleNegateInput() {\n    if (!this.state.number && this.state.result) {\n      // special case: number is empty and result isn't (e.g. after equal operation) it inverts the result\n      this.setState({\n        result: -this.state.result\n      });\n    } else {\n      // default case: negates current number\n      this.setState({\n        number: -this.state.number\n      });\n    }\n  }\n\n  render() {\n    const {\n      number,\n      result,\n      operator\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(CalculatorDisplay, {\n        output: number ? number : result + operator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calculator-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"C\",\n          className: \"calculator-clear-button\",\n          onClick: this.handleClearInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"+-\",\n          className: \"calculator-operation-button\",\n          onClick: this.handleNegateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"%\",\n          className: \"calculator-operation-button\",\n          onClick: \"\",\n          disabled: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"/\",\n          className: \"calculator-operation-button\",\n          onClick: this.handleOperatorInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"7\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"8\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"9\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"*\",\n          className: \"calculator-operation-button\",\n          onClick: this.handleOperatorInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"4\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"5\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"6\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"-\",\n          className: \"calculator-operation-button\",\n          onClick: this.handleOperatorInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"1\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"2\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"3\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"+\",\n          className: \"calculator-operation-button\",\n          onClick: this.handleOperatorInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"0\",\n          className: \"calculator-number-button\",\n          onClick: this.handleNumberInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \".\",\n          className: \"calculator-number-button\",\n          onClick: this.handleCommaInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalculatorButton, {\n          value: \"=\",\n          className: \"calculator-equal-button span-two\",\n          onClick: this.handleEqualInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const {\n      output\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-display\",\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass CalculatorButton extends Component {\n  render() {\n    const {\n      value,\n      onClick,\n      className,\n      disabled\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      value: value,\n      className: 'calculator-button ' + className,\n      onClick: onClick,\n      disabled: disabled,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["X:/Front-end/LGM_internship/calculator/src/components/calculator.js"],"names":["React","Component","Calculator","constructor","props","state","result","number","operator","handleNumberInput","bind","handleOperatorInput","handleEqualInput","handleCommaInput","handleNegateInput","handleClearInput","setState","e","preventDefault","value","target","innerHTML","console","log","prevState","Number","operation","newResult","toString","includes","render","CalculatorDisplay","output","CalculatorButton","onClick","className","disabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './calculator.css';\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      result: '0',\n      number: '0',\n      operator: '',\n    };\n\n    this.handleNumberInput = this.handleNumberInput.bind(this);\n    this.handleOperatorInput = this.handleOperatorInput.bind(this);\n    this.handleEqualInput = this.handleEqualInput.bind(this);\n    this.handleCommaInput = this.handleCommaInput.bind(this);\n    this.handleNegateInput = this.handleNegateInput.bind(this);\n    this.handleClearInput = this.handleClearInput.bind(this);\n  }\n\n  // function to handle input of the clear button\n  handleClearInput() {\n    this.setState({ result: '0', number: '0', operator: '' });\n  }\n\n  // function to handle inputs from number buttons\n  handleNumberInput(e) {\n    e.preventDefault();\n\n    // Getting the value from the pressed button\n    const value = e.target.innerHTML;\n\n    console.log(value);\n\n    // appending the value from the button to the current number\n    this.setState((prevState) => {\n      return {\n        number:\n          prevState.number === '0' && value === '0' \n            ? '0'\n            : prevState.number % 1 === 0 && value !== '0' // if it's a whole number\n            ? Number(prevState.number + value) // it returns a Number() to get rid of 0's in the front when a number is typed, also includes\n            : prevState.number + value, // value !== \"0\" so you can type a 0 right after the comma\n        result: prevState.operator ? prevState.result : '0', // this line resets the result if a new number was typed with no operator stored\n      };\n    });\n  }\n\n  // function to handle operator inputs\n  handleOperatorInput(e) {\n    const operation = e.target.innerHTML;\n\n    this.setState((prevState) => {\n      return {\n        operator: operation,\n        result: prevState.number ? prevState.number : prevState.result,\n        number: operation === '-' && prevState.number === '0' ? '-' : '',\n      };\n    });\n  }\n\n  // function to handle equal input\n  handleEqualInput() {\n    let newResult = 0;\n    switch (this.state.operator) {\n      case '+':\n        newResult = Number(this.state.result) + Number(this.state.number);\n        break;\n      case '-':\n        newResult = this.state.result - this.state.number;\n        break;\n      case '*':\n        newResult = this.state.result * this.state.number;\n        break;\n      case '/':\n        newResult = this.state.result / this.state.number;\n        break;\n      default:\n        newResult = this.state.number ? this.state.number : this.state.result;\n    }\n\n    this.setState({ number: '', operator: '', result: Number(newResult) });\n  }\n\n  // function to handle comma input\n  handleCommaInput() {\n    // concats \",\" to current number if number doesn't include one already\n    if (this.state.number)\n      this.setState({\n        number: !this.state.number.toString().includes('.') ? this.state.number + '.' : this.state.number,\n      });\n  }\n\n  // function to handle negation of number\n  handleNegateInput() {\n    if (!this.state.number && this.state.result) {\n      // special case: number is empty and result isn't (e.g. after equal operation) it inverts the result\n      this.setState({ result: -this.state.result });\n    } else {\n      // default case: negates current number\n      this.setState({ number: -this.state.number });\n    }\n  }\n\n  render() {\n    const { number, result, operator } = this.state;\n    return (\n      <div className=\"calculator\">\n        <CalculatorDisplay output={number ? number : result + operator} />\n        <div className=\"calculator-buttons\">\n          <CalculatorButton value=\"C\" className=\"calculator-clear-button\" onClick={this.handleClearInput} />\n          <CalculatorButton value=\"+-\" className=\"calculator-operation-button\" onClick={this.handleNegateInput} />\n          <CalculatorButton value=\"%\" className=\"calculator-operation-button\" onClick=\"\" disabled=\"true\" />\n          <CalculatorButton value=\"/\" className=\"calculator-operation-button\" onClick={this.handleOperatorInput} />\n          <CalculatorButton value=\"7\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"8\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"9\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"*\" className=\"calculator-operation-button\" onClick={this.handleOperatorInput} />\n          <CalculatorButton value=\"4\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"5\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"6\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"-\" className=\"calculator-operation-button\" onClick={this.handleOperatorInput} />\n          <CalculatorButton value=\"1\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"2\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"3\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\"+\" className=\"calculator-operation-button\" onClick={this.handleOperatorInput} />\n          <CalculatorButton value=\"0\" className=\"calculator-number-button\" onClick={this.handleNumberInput} />\n          <CalculatorButton value=\".\" className=\"calculator-number-button\" onClick={this.handleCommaInput} />\n          <CalculatorButton value=\"=\" className=\"calculator-equal-button span-two\" onClick={this.handleEqualInput} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CalculatorDisplay extends Component {\n  render() {\n    const { output } = this.props;\n    return <div className=\"calculator-display\">{output}</div>;\n  }\n}\n\nclass CalculatorButton extends Component {\n  render() {\n    const { value, onClick, className, disabled } = this.props;\n\n    return (\n      <button value={value} className={'calculator-button ' + className} onClick={onClick} disabled={disabled}>\n        {value}\n      </button>\n    );\n  }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}